!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALT	kernel/kbd.c	16;"	d	file:
AS	Makefile	/^AS	=as$/;"	m
ASM	kernel/system.asm	/^#define ASM 1$/;"	d
ASM	lib/string.c	12;"	d	file:
BOOT_OBJS	boot/Makefile	/^BOOT_OBJS = boot\/boot.o boot\/main.o$/;"	m
BUFLEN	kernel/system.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	lib/readline.c	4;"	d	file:
C	kernel/kbd.c	83;"	d	file:
CAPSLOCK	kernel/kbd.c	18;"	d	file:
CC	Makefile	/^CC	=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -m32 -Wall -O -fstrength-reduce -fomit-frame-pointer -finline-functions -nostdinc -fno-builtin $/;"	m
CMDBYTE	inc/kbd.h	60;"	d
CONSBUFSIZE	kernel/kbd.c	166;"	d	file:
CR0_AM	inc/mmu.h	98;"	d
CR0_CD	inc/mmu.h	100;"	d
CR0_EM	inc/mmu.h	93;"	d
CR0_ET	inc/mmu.h	95;"	d
CR0_MP	inc/mmu.h	92;"	d
CR0_NE	inc/mmu.h	96;"	d
CR0_NW	inc/mmu.h	99;"	d
CR0_PE	inc/mmu.h	91;"	d
CR0_PG	inc/mmu.h	101;"	d
CR0_TS	inc/mmu.h	94;"	d
CR0_WP	inc/mmu.h	97;"	d
CR4_DE	inc/mmu.h	106;"	d
CR4_MCE	inc/mmu.h	104;"	d
CR4_PCE	inc/mmu.h	103;"	d
CR4_PSE	inc/mmu.h	105;"	d
CR4_PVI	inc/mmu.h	108;"	d
CR4_TSD	inc/mmu.h	107;"	d
CR4_VME	inc/mmu.h	109;"	d
CTL	kernel/kbd.c	15;"	d	file:
Command	kernel/shell.c	/^struct Command {$/;"	s	file:
Disassembly	boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	kernel/system.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kernel/kbd.c	22;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon2
E_EOF	inc/error.h	/^	E_EOF		= 8,	\/\/ Unexpected end of file$/;"	e	enum:__anon2
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon2
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon2
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 7,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon2
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon2
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon2
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon2
Elf	inc/elf.h	/^struct Elf {$/;"	s
FEC_PR	inc/mmu.h	135;"	d
FEC_U	inc/mmu.h	137;"	d
FEC_WR	inc/mmu.h	136;"	d
FL_AC	inc/mmu.h	129;"	d
FL_AF	inc/mmu.h	114;"	d
FL_CF	inc/mmu.h	112;"	d
FL_DF	inc/mmu.h	119;"	d
FL_ID	inc/mmu.h	132;"	d
FL_IF	inc/mmu.h	118;"	d
FL_IOPL_0	inc/mmu.h	122;"	d
FL_IOPL_1	inc/mmu.h	123;"	d
FL_IOPL_2	inc/mmu.h	124;"	d
FL_IOPL_3	inc/mmu.h	125;"	d
FL_IOPL_MASK	inc/mmu.h	121;"	d
FL_NT	inc/mmu.h	126;"	d
FL_OF	inc/mmu.h	120;"	d
FL_PF	inc/mmu.h	113;"	d
FL_RF	inc/mmu.h	127;"	d
FL_SF	inc/mmu.h	116;"	d
FL_TF	inc/mmu.h	117;"	d
FL_VIF	inc/mmu.h	130;"	d
FL_VIP	inc/mmu.h	131;"	d
FL_VM	inc/mmu.h	128;"	d
FL_ZF	inc/mmu.h	115;"	d
GCC_LIB	kernel/Makefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GD_KD	inc/mmu.h	17;"	d
GD_KT	inc/mmu.h	16;"	d
GD_TSS0	inc/mmu.h	20;"	d
GD_UD	inc/mmu.h	19;"	d
GD_UT	inc/mmu.h	18;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
IO_PIC1	kernel/picirq.h	12;"	d
IO_PIC2	kernel/picirq.h	13;"	d
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kernel/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_MMU_H	inc/mmu.h	5;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	5;"	d
JOS_INC_X86_H	inc/x86.h	5;"	d
JOS_KERN_PICIRQ_H	kernel/picirq.h	4;"	d
JOS_KERN_TRAP_H	kernel/trap.h	4;"	d
KBCMDP	inc/kbd.h	29;"	d
KBC_AUXDISABLE	inc/kbd.h	32;"	d
KBC_AUXECHO	inc/kbd.h	36;"	d
KBC_AUXENABLE	inc/kbd.h	33;"	d
KBC_AUXTEST	inc/kbd.h	34;"	d
KBC_AUXWRITE	inc/kbd.h	37;"	d
KBC_DISABLE	inc/kbd.h	66;"	d
KBC_ECHO	inc/kbd.h	71;"	d
KBC_ENABLE	inc/kbd.h	67;"	d
KBC_KBDDISABLE	inc/kbd.h	40;"	d
KBC_KBDECHO	inc/kbd.h	35;"	d
KBC_KBDENABLE	inc/kbd.h	41;"	d
KBC_KBDTEST	inc/kbd.h	39;"	d
KBC_MODEIND	inc/kbd.h	70;"	d
KBC_PULSE0	inc/kbd.h	42;"	d
KBC_PULSE1	inc/kbd.h	43;"	d
KBC_PULSE2	inc/kbd.h	44;"	d
KBC_PULSE3	inc/kbd.h	45;"	d
KBC_RAMREAD	inc/kbd.h	30;"	d
KBC_RAMWRITE	inc/kbd.h	31;"	d
KBC_RESEND	inc/kbd.h	64;"	d
KBC_RESET	inc/kbd.h	63;"	d
KBC_SELFTEST	inc/kbd.h	38;"	d
KBC_SETDEFAULT	inc/kbd.h	65;"	d
KBC_SETTABLE	inc/kbd.h	69;"	d
KBC_TYPEMATIC	inc/kbd.h	68;"	d
KBDATAP	inc/kbd.h	47;"	d
KBD_H	inc/kbd.h	2;"	d
KBOUTP	inc/kbd.h	48;"	d
KBR_ACK	inc/kbd.h	76;"	d
KBR_BREAK	inc/kbd.h	79;"	d
KBR_ECHO	inc/kbd.h	81;"	d
KBR_EXTENDED	inc/kbd.h	74;"	d
KBR_FAILURE	inc/kbd.h	78;"	d
KBR_OVERRUN	inc/kbd.h	77;"	d
KBR_RESEND	inc/kbd.h	75;"	d
KBR_RSTDONE	inc/kbd.h	80;"	d
KBSTATP	inc/kbd.h	19;"	d
KBS_DIB	inc/kbd.h	20;"	d
KBS_IBF	inc/kbd.h	21;"	d
KBS_NOSEC	inc/kbd.h	24;"	d
KBS_OCMD	inc/kbd.h	23;"	d
KBS_PERR	inc/kbd.h	27;"	d
KBS_RERR	inc/kbd.h	26;"	d
KBS_TERR	inc/kbd.h	25;"	d
KBS_WARM	inc/kbd.h	22;"	d
KC8_CPU	inc/kbd.h	57;"	d
KC8_IGNSEC	inc/kbd.h	56;"	d
KC8_KDISABLE	inc/kbd.h	55;"	d
KC8_KENABLE	inc/kbd.h	59;"	d
KC8_MDISABLE	inc/kbd.h	54;"	d
KC8_MENABLE	inc/kbd.h	58;"	d
KC8_TRANS	inc/kbd.h	53;"	d
KERN_LDFLAGS	kernel/Makefile	/^KERN_LDFLAGS = -T kernel\/kern.ld$/;"	m
KERN_OBJS	kernel/Makefile	/^KERN_OBJS = kernel\/entry.o \\$/;"	m
KERN_SRCFILES	kernel/Makefile	/^KERN_SRCFILES := kernel\/entry.S \\$/;"	m
KEY_DEL	inc/kbd.h	14;"	d
KEY_DN	inc/kbd.h	8;"	d
KEY_END	inc/kbd.h	6;"	d
KEY_HOME	inc/kbd.h	5;"	d
KEY_INS	inc/kbd.h	13;"	d
KEY_LF	inc/kbd.h	9;"	d
KEY_PGDN	inc/kbd.h	12;"	d
KEY_PGUP	inc/kbd.h	11;"	d
KEY_RT	inc/kbd.h	10;"	d
KEY_UP	inc/kbd.h	7;"	d
KSTKSIZE	inc/mmu.h	13;"	d
K_LDCMDBYTE	inc/kbd.h	51;"	d
K_RDCMDBYTE	inc/kbd.h	50;"	d
LD	Makefile	/^LD	=ld$/;"	m
MAX	inc/types.h	52;"	d
MAXARGS	kernel/shell.c	46;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon2
MAX_IRQS	kernel/picirq.h	9;"	d
MIN	inc/types.h	46;"	d
NCOMMANDS	kernel/shell.c	18;"	d	file:
NCOMMANDS	kernel/system.asm	/^#define NCOMMANDS (sizeof(commands)\/sizeof(commands[0]))$/;"	d
NM	Makefile	/^NM = nm$/;"	m
NO	kernel/kbd.c	12;"	d	file:
NPDENTRIES	inc/mmu.h	57;"	d
NPTENTRIES	inc/mmu.h	58;"	d
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	8;"	d
NUMLOCK	kernel/kbd.c	19;"	d	file:
OBJCOPY	Makefile	/^OBJCOPY = objcopy$/;"	m
OBJDIR	Makefile	/^OBJDIR = .$/;"	m
OBJDUMP	Makefile	/^OBJDUMP = objdump$/;"	m
PDX	inc/mmu.h	45;"	d
PDXSHIFT	inc/mmu.h	67;"	d
PGADDR	inc/mmu.h	54;"	d
PGNUM	inc/mmu.h	42;"	d
PGOFF	inc/mmu.h	51;"	d
PGSHIFT	inc/mmu.h	61;"	d
PGSIZE	inc/mmu.h	60;"	d
PTE_A	inc/mmu.h	75;"	d
PTE_ADDR	inc/mmu.h	88;"	d
PTE_AVAIL	inc/mmu.h	82;"	d
PTE_D	inc/mmu.h	76;"	d
PTE_G	inc/mmu.h	78;"	d
PTE_P	inc/mmu.h	70;"	d
PTE_PCD	inc/mmu.h	74;"	d
PTE_PS	inc/mmu.h	77;"	d
PTE_PWT	inc/mmu.h	73;"	d
PTE_SYSCALL	inc/mmu.h	85;"	d
PTE_U	inc/mmu.h	72;"	d
PTE_W	inc/mmu.h	71;"	d
PTSHIFT	inc/mmu.h	64;"	d
PTSIZE	inc/mmu.h	63;"	d
PTX	inc/mmu.h	48;"	d
PTXSHIFT	inc/mmu.h	66;"	d
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
ROUNDDOWN	inc/types.h	61;"	d
ROUNDUP	inc/types.h	67;"	d
SCROLLLOCK	kernel/kbd.c	20;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	154;"	d
SEG	inc/mmu.h	184;"	d
SEG16	inc/mmu.h	188;"	d
SEG_FAULT	inc/mmu.h	182;"	d
SEG_NULL	inc/mmu.h	151;"	d
SEG_NULL	inc/mmu.h	180;"	d
SETCALLGATE	inc/mmu.h	308;"	d
SETGATE	inc/mmu.h	294;"	d
SHELL_H	inc/shell.h	2;"	d
SHIFT	kernel/kbd.c	14;"	d	file:
STA_A	inc/mmu.h	201;"	d
STA_C	inc/mmu.h	198;"	d
STA_E	inc/mmu.h	197;"	d
STA_R	inc/mmu.h	200;"	d
STA_W	inc/mmu.h	199;"	d
STA_X	inc/mmu.h	196;"	d
STS_CG16	inc/mmu.h	207;"	d
STS_CG32	inc/mmu.h	213;"	d
STS_IG16	inc/mmu.h	209;"	d
STS_IG32	inc/mmu.h	214;"	d
STS_LDT	inc/mmu.h	205;"	d
STS_T16A	inc/mmu.h	204;"	d
STS_T16B	inc/mmu.h	206;"	d
STS_T32A	inc/mmu.h	211;"	d
STS_T32B	inc/mmu.h	212;"	d
STS_TG	inc/mmu.h	208;"	d
STS_TG16	inc/mmu.h	210;"	d
STS_TG32	inc/mmu.h	215;"	d
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
TIMER_H	inc/timer.h	2;"	d
TIME_HZ	kernel/timer.c	7;"	d	file:
TRAPHANDLER_NOEC	kernel/trap_entry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
WHITESPACE	kernel/shell.c	45;"	d	file:
_alltraps	kernel/trap_entry.S	/^_alltraps:$/;"	l
_start	kernel/entry.S	/^_start:$/;"	l
_start	kernel/system.asm	/^_start:$/;"	l
altflag	kernel/system.asm	/^			altflag = 1;$/;"	d
altflag	kernel/system.asm	/^		altflag = 0;$/;"	d
argc	kernel/system.asm	/^	argc = 0;$/;"	d
attrib	kernel/screen.c	/^int attrib = 0x0F;$/;"	v
attrib	kernel/system.asm	/^    attrib = (backcolor << 4) | (forecolor & 0x0F);$/;"	d
base	kernel/system.asm	/^			base = 10;$/;"	d
base	kernel/system.asm	/^			base = 16;$/;"	d
base	kernel/system.asm	/^		base = 10;$/;"	d
blank	kernel/system.asm	/^    blank = 0x0 | (attrib << 8);$/;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kernel/entry.S	/^bootstack:$/;"	l
bootstacktop	kernel/entry.S	/^bootstacktop:$/;"	l
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
buf	kernel/kbd.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon3	file:
buf	kernel/system.asm	/^		buf = readline("OSDI> ");$/;"	d
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
c	kernel/system.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	kernel/system.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	kernel/system.asm	/^		c = getc();$/;"	d
c	kernel/system.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
ch	kernel/system.asm	/^				ch = *fmt;$/;"	d
char	kernel/system.asm	/^char *$/;"	l
char	kernel/system.asm	/^char *readline(const char *prompt)$/;"	l
charcode	kernel/kbd.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
cls	kernel/screen.c	/^void cls()$/;"	f
cnt	kernel/system.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
commands	kernel/shell.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
cons	kernel/kbd.c	/^} cons;$/;"	v	typeref:struct:__anon3	file:
cons_getc	kernel/kbd.c	/^cons_getc(void)$/;"	f
cons_intr	kernel/kbd.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cprintf	kernel/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
csr_x	kernel/screen.c	/^int csr_x = 0, csr_y = 0;$/;"	v
csr_x	kernel/system.asm	/^        csr_x = (csr_x + 8) & ~(8 - 1);$/;"	d
csr_x	kernel/system.asm	/^        csr_x = 0;$/;"	d
csr_x	kernel/system.asm	/^    csr_x = 0;$/;"	d
csr_y	kernel/screen.c	/^int csr_x = 0, csr_y = 0;$/;"	v
csr_y	kernel/system.asm	/^        csr_y = 25 - 1;$/;"	d
csr_y	kernel/system.asm	/^    csr_y = 0;$/;"	d
ctlmap	kernel/kbd.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
d	kernel/system.asm	/^	d = dst;$/;"	d
data	kernel/system.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	kernel/system.asm	/^	data = inb(KBDATAP);$/;"	d
default	kernel/system.asm	/^		default:$/;"	l
default_trap_handler	kernel/trap.c	/^void default_trap_handler(struct Trapframe *tf)$/;"	f
desc	kernel/shell.c	/^	const char *desc;$/;"	m	struct:Command	file:
didinit	kernel/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	kernel/system.asm	/^	didinit = 1;$/;"	d
die	kernel/entry.S	/^die:$/;"	l
die	kernel/system.asm	/^die:$/;"	l
dig	kernel/system.asm	/^			dig = *s - '0';$/;"	d
dig	kernel/system.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	kernel/system.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	kernel/system.asm	/^	dst_in = dst;$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
end_gdt	boot/boot.S	/^end_gdt:$/;"	l
end_pa	boot/boot.asm	/^	end_pa = pa + count;$/;"	d
eph	boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	kernel/system.asm	/^				err = -err;$/;"	d
err	kernel/system.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
extern	kernel/system.asm	/^extern void init_video(void);$/;"	l
f	Makefile	/^	dd if=$(OBJDIR)\/boot\/boot of=$(OBJDIR)\/kernel.img conv=notrunc 2>\/dev\/null$/;"	m
f	Makefile	/^	dd if=$(OBJDIR)\/kernel\/system of=$(OBJDIR)\/kernel.img seek=1 conv=notrunc 2>\/dev\/null$/;"	m
f	Makefile	/^	dd if=\/dev\/zero of=$(OBJDIR)\/kernel.img count=10000 2>\/dev\/null$/;"	m
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
func	kernel/shell.c	/^	int (*func)(int argc, char** argv);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdtdesc	boot/boot.S	/^gdtdesc: $/;"	l
get_tick	kernel/timer.c	/^unsigned long get_tick()$/;"	f
getc	kernel/kbd.c	/^int getc(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
i	kernel/system.asm	/^	i = 0;$/;"	d
inb	inc/x86.h	/^inb(int port)$/;"	f
init_video	kernel/screen.c	/^void init_video(void)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	kernel/system.asm	/^int attrib = 0x0F;$/;"	l
int	kernel/system.asm	/^int csr_x = 0, csr_y = 0;$/;"	l
int	kernel/system.asm	/^int getc(void)$/;"	l
int	kernel/system.asm	/^int mon_help(int argc, char **argv)$/;"	l
int	kernel/system.asm	/^int print_tick(int argc, char **argv)$/;"	l
int	kernel/system.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
irq_mask_8259A	kernel/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	kernel/system.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kernel/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
jiffies	kernel/timer.c	/^static unsigned long jiffies = 0;$/;"	v	file:
kbd_init	kernel/kbd.c	/^void kbd_init(void)$/;"	f
kbd_intr	kernel/kbd.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kernel/kbd.c	/^kbd_proc_data(void)$/;"	f	file:
kernel_main	kernel/main.c	/^void kernel_main(void)$/;"	f
last_tf	kernel/system.asm	/^	last_tf = tf;$/;"	d
last_tf	kernel/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
lflag	kernel/system.asm	/^		lflag = 0;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
long	kernel/system.asm	/^long$/;"	l
loop	boot/boot.S	/^loop:$/;"	l
loop	boot/boot.asm	/^loop:$/;"	l
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
mon_help	kernel/shell.c	/^int mon_help(int argc, char **argv)$/;"	f
mon_kerninfo	kernel/shell.c	/^int mon_kerninfo(int argc, char **argv)$/;"	f
move_csr	kernel/screen.c	/^void move_csr(void)$/;"	f
name	kernel/shell.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kernel/trap_entry.S	/^	name:								\\$/;"	l
normalmap	kernel/kbd.c	/^static uint8_t normalmap[256] =$/;"	v	file:
num	kernel/system.asm	/^				num = -(long long) num;$/;"	d
num	kernel/system.asm	/^			num = (unsigned long long)$/;"	d
num	kernel/system.asm	/^			num = getint(&ap, lflag);$/;"	d
num	kernel/system.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	kernel/system.asm	/^		number:$/;"	l
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	74;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
p	kernel/system.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
padc	kernel/system.asm	/^			padc = '-';$/;"	d
padc	kernel/system.asm	/^			padc = '0';$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
ph	boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pic_init	kernel/picirq.c	/^pic_init(void)$/;"	f
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
precision	kernel/system.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	kernel/system.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	kernel/system.asm	/^		precision = -1;$/;"	d
print_regs	kernel/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_tick	kernel/shell.c	/^int print_tick(int argc, char **argv)$/;"	f
print_trapframe	kernel/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
process_precision	kernel/system.asm	/^		process_precision:$/;"	l
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	boot/boot.asm	/^protcseg:$/;"	l
putch	kernel/screen.c	/^void putch(unsigned char c)$/;"	f
puts	kernel/screen.c	/^void puts(unsigned char *text)$/;"	f
rc	kernel/system.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readline	lib/readline.c	/^char *readline(const char *prompt)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
reswitch	kernel/system.asm	/^	reswitch:$/;"	l
ret	kernel/system.asm	/^	ret = dst;$/;"	d
rpos	kernel/kbd.c	/^	uint32_t rpos;$/;"	m	struct:__anon3	file:
runcmd	kernel/shell.c	/^static int runcmd(char *buf)$/;"	f	file:
s	kernel/system.asm	/^	s = src;$/;"	d
scroll	kernel/screen.c	/^void scroll(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
set_timer	kernel/timer.c	/^void set_timer(int hz)$/;"	f
settextcolor	kernel/screen.c	/^void settextcolor(unsigned char forecolor, unsigned char backcolor)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shell	kernel/shell.c	/^void shell()$/;"	f
shiftcode	kernel/kbd.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kernel/kbd.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	kernel/system.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
start	boot/boot.S	/^start:$/;"	l
start	boot/boot.asm	/^start:$/;"	l
static	boot/boot.asm	/^static __inline uint8_t$/;"	l
static	boot/boot.asm	/^static __inline void$/;"	l
static	kernel/system.asm	/^static __inline uint32_t$/;"	l
static	kernel/system.asm	/^static __inline uint8_t$/;"	l
static	kernel/system.asm	/^static __inline void$/;"	l
static	kernel/system.asm	/^static bool didinit;$/;"	l
static	kernel/system.asm	/^static char buf[BUFLEN];$/;"	l
static	kernel/system.asm	/^static int$/;"	l
static	kernel/system.asm	/^static long long$/;"	l
static	kernel/system.asm	/^static unsigned long jiffies = 0;$/;"	l
static	kernel/system.asm	/^static unsigned long long$/;"	l
static	kernel/system.asm	/^static void$/;"	l
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
temp	kernel/system.asm	/^        temp = csr_y - 25 + 1;$/;"	d
temp	kernel/system.asm	/^    temp = csr_y * 80 + csr_x;$/;"	d
textmemptr	kernel/screen.c	/^unsigned short *textmemptr;$/;"	v
textmemptr	kernel/system.asm	/^    textmemptr = (unsigned short *)0xB8000;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
timer_handler	kernel/timer.c	/^void timer_handler()$/;"	f
timer_init	kernel/timer.c	/^void timer_init()$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kernel/kbd.c	/^static uint8_t togglecode[256] =$/;"	v	file:
trap_dispatch	kernel/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kernel/trap.c	/^void trap_init()$/;"	f
trapname	kernel/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
unsigned	kernel/system.asm	/^unsigned long get_tick()$/;"	l
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
vcprintf	kernel/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
void	boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	boot/boot.asm	/^void$/;"	l
void	kernel/system.asm	/^void *$/;"	l
void	kernel/system.asm	/^void cls()$/;"	l
void	kernel/system.asm	/^void default_trap_handler(struct Trapframe *tf)$/;"	l
void	kernel/system.asm	/^void init_video(void)$/;"	l
void	kernel/system.asm	/^void kbd_init(void)$/;"	l
void	kernel/system.asm	/^void kernel_main(void)$/;"	l
void	kernel/system.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	kernel/system.asm	/^void putch(unsigned char c)$/;"	l
void	kernel/system.asm	/^void puts(unsigned char *text)$/;"	l
void	kernel/system.asm	/^void scroll(void)$/;"	l
void	kernel/system.asm	/^void set_timer(int hz)$/;"	l
void	kernel/system.asm	/^void settextcolor(unsigned char forecolor, unsigned char backcolor)$/;"	l
void	kernel/system.asm	/^void shell()$/;"	l
void	kernel/system.asm	/^void timer_handler()$/;"	l
void	kernel/system.asm	/^void timer_init()$/;"	l
void	kernel/system.asm	/^void$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
where	kernel/system.asm	/^          where = (textmemptr-1) + (csr_y * 80 + csr_x);$/;"	d
where	kernel/system.asm	/^        where = textmemptr + (csr_y * 80 + csr_x);$/;"	d
width	kernel/system.asm	/^				width = 0;$/;"	d
width	kernel/system.asm	/^				width = precision, precision = -1;$/;"	d
width	kernel/system.asm	/^		width = -1;$/;"	d
wpos	kernel/kbd.c	/^	uint32_t wpos;$/;"	m	struct:__anon3	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
